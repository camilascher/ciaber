/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Inicio;

import com.mysql.jdbc.StringUtils;
import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.List;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultCellEditor;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JMenu;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import modelos.DetallePedido;
import modelos.Empleado;
import modelos.Pedido;
import modelos.Producto;
import servicios.Conexion;
import servicios.Empleados_servicio;
import servicios.Impresion_servicio;
import servicios.Parametros_servicio;
import servicios.Pedidos_servicio;
import static servicios.Pedidos_servicio.getInstance;
import servicios.Productos_servicio;
import servicios.Usuarios_servicio;

/**
 *
 * @author cami
 */
public class Pedidos extends javax.swing.JFrame {

    private Pedido ped = null;
    private JComboBox comboProductos = null;

    /**
     * Creates new form Inicio
     */
    public Pedidos() {
        comboProductos = new JComboBox();
        List<Producto> productos = null;
        try {
            productos = Productos_servicio.getInstance().recuperarTodas();
        } catch (SQLException ex) {
            Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
        }
        comboProductos.addItem(null);
        for (int i = 0; i < productos.size(); i++) {
            comboProductos.addItem(productos.get(i));

        }
        initComponents();
        cargarComboEmpleado(jComboEmpleado);
        cargarPantallaNuevoPed();
        jButtonGuardarPed.setEnabled(false);
        //new PruebaReporte();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelBusqPed = new javax.swing.JPanel();
        jButtonNuevoPed = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTextNroPedido = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFecha = new javax.swing.JFormattedTextField();
        jComboEmpleado = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jButtonBuscar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePedidos = new javax.swing.JTable();
        jPanelModifPed = new javax.swing.JPanel();
        jButtonGuardarPed = new javax.swing.JButton();
        jButtonCancelarPed = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabelNped = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEditPed = new javax.swing.JTable();
        jButtonAddItem = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabelTotal = new javax.swing.JLabel();
        jButtonDeleteItem = new javax.swing.JButton();
        jTextEmpleadoLeg = new javax.swing.JTextField();
        jLabelEmpleadoNombre = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabelBonifMonto = new javax.swing.JLabel();
        jLabelBonificado = new javax.swing.JLabel();
        jLabelTotalFinal = new javax.swing.JLabel();
        jLabelSaldoQuincena = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabelTopeDiario = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabelSaldo = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanelEmpleados = new javax.swing.JPanel();
        jTextEmpleadoId = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextEmpleadoDNI = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextEmpleadoNombre = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextEmpleadoTarjeta = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextEmpleadoBonPorc = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextEmpleadoBon = new javax.swing.JTextField();
        jButtonCrearEmpleado = new javax.swing.JButton();
        jButtonCancelarEmpleado = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuPedidos = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuEmpleados = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Aplicaci√≥n Pedidos");
        setSize(new java.awt.Dimension(598, 311));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        getContentPane().setLayout(new java.awt.CardLayout());

        jButtonNuevoPed.setText("Nuevo pedido");
        jButtonNuevoPed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevoPedActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Buscar Pedidos"));

        jLabel1.setText("Nro pedido");

        jLabel2.setText("Fecha");

        jTextFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFechaActionPerformed(evt);
            }
        });

        jComboEmpleado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { }));
        jComboEmpleado.setName("");
        jComboEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboEmpleadoActionPerformed(evt);
            }
        });

        jLabel3.setText("Empleado");

        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jTablePedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Nro. Pedido", "Fecha", "Empleado", "Modificar","Eliminar"
            }
        ));
        jTablePedidos.getColumn("Modificar").setCellRenderer(new ButtonRenderer());
        jTablePedidos.getColumn("Modificar").setCellEditor(
            new ButtonEditor(new JCheckBox()));
        JScrollPane scroll = new JScrollPane(jTablePedidos);
        //jPanel2.add(scroll);
        setSize(400, 100);
        setVisible(true);
        jTablePedidos.getColumn("Eliminar").setCellRenderer(new ButtonRenderer());
        jTablePedidos.getColumn("Eliminar").setCellEditor(
            new ButtonEditor(new JCheckBox()));
        jTablePedidos.setEnabled(true);
        jScrollPane2.setViewportView(jTablePedidos);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonBuscar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 826, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFecha)
                    .addComponent(jTextNroPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(2, 2, 2)
                .addComponent(jComboEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jComboEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextNroPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        jComboEmpleado.getAccessibleContext().setAccessibleName("\"\"");

        javax.swing.GroupLayout jPanelBusqPedLayout = new javax.swing.GroupLayout(jPanelBusqPed);
        jPanelBusqPed.setLayout(jPanelBusqPedLayout);
        jPanelBusqPedLayout.setHorizontalGroup(
            jPanelBusqPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBusqPedLayout.createSequentialGroup()
                .addComponent(jButtonNuevoPed)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanelBusqPedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelBusqPedLayout.setVerticalGroup(
            jPanelBusqPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBusqPedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonNuevoPed)
                .addGap(30, 30, 30)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanelBusqPed, "card2");

        jPanelModifPed.setBorder(javax.swing.BorderFactory.createTitledBorder("Modificar Pedido"));
        jPanelModifPed.setMinimumSize(new java.awt.Dimension(44, 25));

        jButtonGuardarPed.setText("Guardar");
        jButtonGuardarPed.setName("jButtonGuardarPed"); // NOI18N
        jButtonGuardarPed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarPedActionPerformed(evt);
            }
        });

        jButtonCancelarPed.setText("Cancelar");
        jButtonCancelarPed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarPedActionPerformed(evt);
            }
        });

        jLabel4.setText("N√∫mero de pedido");

        jLabel5.setText("Empleado");

        jTableEditPed.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null,null, null, null, null}
            },
            new String [] {
                "C√≥digo","Producto", "Precio", "Cantidad", "Total"
            }
        ));
        jScrollPane1.setViewportView(jTableEditPed);
        jTableEditPed.getModel().addTableModelListener(new TableModelListener(){
            public void tableChanged(TableModelEvent e){
                if(e.getType()== TableModelEvent.UPDATE)
                {
                    int column = e.getColumn();
                    if (column == 0){
                        completarProducto();
                    }
                    else if (column == 3)
                    {

                        if(jTableEditPed.getValueAt(jTableEditPed.getSelectedRow(),2)!= null && !"".equals(jTableEditPed.getValueAt(jTableEditPed.getSelectedRow(),2)) ){
                            Double precio = Double.valueOf(jTableEditPed.getValueAt(jTableEditPed.getSelectedRow(),2).toString());
                            int cant =  Integer.valueOf(jTableEditPed.getValueAt(jTableEditPed.getSelectedRow(),3).toString());
                            Double tot = precio*cant;
                            jTableEditPed.setValueAt(tot,jTableEditPed.getSelectedRow(),4);

                            recalculaTotal();
                            agregarFila();
                            jTableEditPed.setCellSelectionEnabled(true);
                            jTableEditPed.changeSelection(jTableEditPed.getSelectedRow()+1, 0, false, false);
                            jTableEditPed.requestFocus();
                        }
                    }

                }
            }
        });

        jButtonAddItem.setText("+");
        jButtonAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddItemActionPerformed(evt);
            }
        });

        jLabel6.setText("Subtotal   $");

        jButtonDeleteItem.setText("-");
        jButtonDeleteItem.setMaximumSize(new java.awt.Dimension(44, 25));
        jButtonDeleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteItemActionPerformed(evt);
            }
        });

        jTextEmpleadoLeg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextEmpleadoLegKeyPressed(evt);
            }
        });

        jLabel7.setText("Bonificado $");

        jLabel8.setText("Total $");

        jLabel9.setText("Saldo quincena $");

        jLabel10.setText("Tope diario bonificado $");

        jLabel11.setText("Saldo restante $");

        jLabel19.setText("%");

        javax.swing.GroupLayout jPanelModifPedLayout = new javax.swing.GroupLayout(jPanelModifPed);
        jPanelModifPed.setLayout(jPanelModifPedLayout);
        jPanelModifPedLayout.setHorizontalGroup(
            jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelModifPedLayout.createSequentialGroup()
                .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelModifPedLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextEmpleadoLeg))
                    .addGroup(jPanelModifPedLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelNped, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelEmpleadoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonAddItem, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDeleteItem, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelModifPedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 847, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelModifPedLayout.createSequentialGroup()
                        .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelModifPedLayout.createSequentialGroup()
                                .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanelModifPedLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel9))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelModifPedLayout.createSequentialGroup()
                                        .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanelModifPedLayout.createSequentialGroup()
                                                .addComponent(jLabel11)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabelSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanelModifPedLayout.createSequentialGroup()
                                                .addComponent(jLabel10)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabelTopeDiario, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabelTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                                    .addComponent(jLabelBonifMonto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelTotalFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelSaldoQuincena, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jButtonGuardarPed))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonCancelarPed)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelModifPedLayout.createSequentialGroup()
                                .addComponent(jLabelBonificado, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel19)))
                        .addGap(5, 5, 5)))
                .addGap(15, 15, 15))
        );
        jPanelModifPedLayout.setVerticalGroup(
            jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelModifPedLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel19)
                    .addGroup(jPanelModifPedLayout.createSequentialGroup()
                        .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelNped, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelEmpleadoNombre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(jButtonDeleteItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonAddItem)
                                .addComponent(jTextEmpleadoLeg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(jLabel10)
                                .addComponent(jLabelTopeDiario, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelModifPedLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabelBonifMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelModifPedLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabelBonificado, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(7, 7, 7)
                .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabelTotalFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabelSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabelSaldoQuincena, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonGuardarPed)
                    .addComponent(jButtonCancelarPed))
                .addContainerGap())
        );

        getContentPane().add(jPanelModifPed, "card3");

        jPanelEmpleados.setBorder(javax.swing.BorderFactory.createTitledBorder("Crear Empleado"));
        jPanelEmpleados.setToolTipText("");

        jTextEmpleadoId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextEmpleadoIdActionPerformed(evt);
            }
        });

        jLabel12.setText("N√∫mero de legajo");

        jLabel13.setText("N√∫mero de documento");

        jTextEmpleadoDNI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextEmpleadoDNIActionPerformed(evt);
            }
        });

        jLabel14.setText("Apellido y nombre");

        jLabel15.setText("Nro. Tarjeta");

        jLabel16.setText("Porcentaje de bonificaci√≥n");

        jLabel18.setText("Tope de bonificaci√≥n diario");

        jButtonCrearEmpleado.setText("Crear");
        jButtonCrearEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCrearEmpleadoActionPerformed(evt);
            }
        });

        jButtonCancelarEmpleado.setText("Cancelar");
        jButtonCancelarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarEmpleadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelEmpleadosLayout = new javax.swing.GroupLayout(jPanelEmpleados);
        jPanelEmpleados.setLayout(jPanelEmpleadosLayout);
        jPanelEmpleadosLayout.setHorizontalGroup(
            jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEmpleadosLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel18))
                .addGap(45, 45, 45)
                .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelEmpleadosLayout.createSequentialGroup()
                        .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextEmpleadoId, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                                .addComponent(jTextEmpleadoDNI))
                            .addComponent(jTextEmpleadoTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextEmpleadoNombre))
                        .addGap(516, 516, 516))
                    .addGroup(jPanelEmpleadosLayout.createSequentialGroup()
                        .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextEmpleadoBonPorc, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                            .addComponent(jTextEmpleadoBon))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelEmpleadosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonCrearEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jButtonCancelarEmpleado)
                .addContainerGap())
        );
        jPanelEmpleadosLayout.setVerticalGroup(
            jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEmpleadosLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextEmpleadoId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(23, 23, 23)
                .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextEmpleadoDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextEmpleadoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(18, 18, 18)
                .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jTextEmpleadoTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jTextEmpleadoBonPorc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jTextEmpleadoBon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 214, Short.MAX_VALUE)
                .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCrearEmpleado)
                    .addComponent(jButtonCancelarEmpleado))
                .addContainerGap())
        );

        getContentPane().add(jPanelEmpleados, "card4");

        jMenuPedidos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jMenuPedidos.setForeground(new java.awt.Color(153, 153, 153));
        jMenuPedidos.setText("Pedidos");
        jMenuPedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuPedidosMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenuPedidos);

        jMenu2.setText("Productos");
        jMenuBar1.add(jMenu2);

        jMenuEmpleados.setText("Empleados");
        jMenuEmpleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuEmpleadosMouseClicked(evt);
            }
        });
        jMenuEmpleados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuEmpleadosActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenuEmpleados);

        jMenu4.setText("Reportes");
        jMenuBar1.add(jMenu4);

        jMenu5.setText("Salir");
        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized

    }//GEN-LAST:event_formComponentResized

    private void jTextFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFechaActionPerformed

    }//GEN-LAST:event_jTextFechaActionPerformed

    private void jComboEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboEmpleadoActionPerformed


    }//GEN-LAST:event_jComboEmpleadoActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        cargarPedidos();

    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void cargarPedidos() {
        List<Pedido> ped;
        try {
            ped = Pedidos_servicio.getInstance().recuperarTodasEnc(this.jTextNroPedido.getText(), this.jTextFecha.getText(), (String) this.jComboEmpleado.getSelectedItem());
            DefaultTableModel dtm = (DefaultTableModel) jTablePedidos.getModel();
            dtm.setRowCount(0);
            for (int i = 0; i < ped.size(); i++) {
                dtm.addRow(new Object[]{
                    ped.get(i).getIdPedido(),
                    ped.get(i).getFecha(),
                    ped.get(i).getEmpleado().getNombreEmpleado()

                });

            }

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(this, "Ha surgido un error y no se han podido recuperar los registros");
        }
    }

    private void completarProducto() {
        String prod = jTableEditPed.getValueAt(jTableEditPed.getSelectedRow(), 0).toString();
        Producto p = null;
        try {
            if (p == null && prod!="") {
                if (isNumeric(prod)) {//compruebo si es num√©rico para ver si busco por id o descripci√≥n
                    p = Productos_servicio.getInstance().recuperarPorId(Integer.valueOf(prod));
                    if (p == null) {
                        JOptionPane.showMessageDialog(this, "El c√≥digo de producto ingresado no existe", "Error", JOptionPane.WARNING_MESSAGE);
                    }

                } else {
                    p = Productos_servicio.getInstance().recuperarPorDescripcion(prod);
                    if (p == null) {
                        JOptionPane.showMessageDialog(this, "El producto ingresado no existe", "Error", JOptionPane.WARNING_MESSAGE);
                    } else {
                        jTableEditPed.setValueAt(p.getIdProducto(), jTableEditPed.getSelectedRow(), 0);
                    }

                }

            }
        } catch (SQLException ex) {
            Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);

        }
        if (p != null) {
            jTableEditPed.setValueAt(p.getDescripcion(), jTableEditPed.getSelectedRow(), 1);
            jTableEditPed.setValueAt(p.getPrecio(), jTableEditPed.getSelectedRow(), 2);
            jTableEditPed.setCellSelectionEnabled(true);
            jTableEditPed.changeSelection(jTableEditPed.getSelectedRow(), 3, false, false);
            jTableEditPed.requestFocus();
            
        } 

    }

    private void jButtonGuardarPedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarPedActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableEditPed.getModel();
        Producto prod = null;
        Empleado emp = null;
        try {
            Conexion.getConnection().setAutoCommit(false);
        } catch (SQLException ex) {
            Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
        }
        String idPedido = jLabelNped.getText();
        if (ped == null) {
            /**
             * **************NUEVO************
             */
            try {
                emp = Empleados_servicio.getInstance().recuperarEmpPorIdTarj(jTextEmpleadoLeg.getText());
            } catch (SQLException ex) {
                Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
            }

            Pedidos_servicio.getInstance().guardarPedidoCab(idPedido, emp.getIdEmpleado().toString(), jLabelBonifMonto.getText(), jLabelTotalFinal.getText(), 0, Usuarios_servicio.getInstance().getUsuarioLogeado());

        } else {
            /**
             * **************MODIFICACION************
             */
            Pedidos_servicio.getInstance().borrarPedidoDet(idPedido);
            Pedidos_servicio.getInstance().actualizarTotalBonif(ped.getIdPedido(), Double.valueOf(jLabelTotal.getText()), Double.valueOf(jLabelBonifMonto.getText()));
        }
        for (int i = 0; i < model.getRowCount(); i++) {
            if (jTableEditPed.getValueAt(i, 0) != null && jTableEditPed.getValueAt(i, 0).toString() != "") {
                try {
                    prod = (Producto) Productos_servicio.getInstance().recuperarPorId(Integer.valueOf(jTableEditPed.getValueAt(i, 0).toString()));
                } catch (SQLException ex) {
                    Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
                }
                Pedidos_servicio.getInstance().guardarPedidoDet(idPedido, prod.getIdProducto().toString(), prod.getPrecio().toString(), (String) jTableEditPed.getValueAt(i, 3).toString());
            }
        }
        try {
            Conexion.getConnection().commit();
        } catch (SQLException ex) {
            Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
        }
        Pedido pedido;
        try {
            pedido = Pedidos_servicio.getInstance().recuperarPedidoCompleto(idPedido);
            Impresion_servicio.getInstance().imprimirPedido(pedido);
        } catch (SQLException ex) {
            Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
        }
        limpiarPantallaNuevoPed();
        cargarPantallaNuevoPed();

    }//GEN-LAST:event_jButtonGuardarPedActionPerformed

    private void jButtonCancelarPedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarPedActionPerformed
        limpiarPantallaNuevoPed();

    }//GEN-LAST:event_jButtonCancelarPedActionPerformed

    private void limpiarPantallaNuevoPed() {
        mostrarPanel(jPanelBusqPed, jMenuPedidos);
        jTextEmpleadoLeg.setText("");//Limpio legajo y nombre del empleado
        jLabelEmpleadoNombre.setText("");
        DefaultTableModel model = (DefaultTableModel) jTableEditPed.getModel();
        while (model.getRowCount() > 0) {
            for (int i = 0; i < model.getRowCount(); i++) {
                model.removeRow(i);
            }
        }
        model.addRow(new Object[]{"", "", "", ""});
        jLabelTotal.setText(Integer.toString(0));
        jLabelBonifMonto.setText("");
        jLabelBonificado.setText("");
        jLabelSaldo.setText("");
        jLabelSaldoQuincena.setText("");
        jLabelTopeDiario.setText("");
        jLabelTotalFinal.setText("");

    }

    private void jButtonNuevoPedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoPedActionPerformed
        cargarPantallaNuevoPed();
    }//GEN-LAST:event_jButtonNuevoPedActionPerformed

    private void cargarPantallaNuevoPed() {
        mostrarPanel(jPanelModifPed, jMenuPedidos);
        ped = null;
        jPanelModifPed.setBorder(javax.swing.BorderFactory.createTitledBorder("Nuevo Pedido"));
        String ped = "";
        try {
            ped = Pedidos_servicio.getInstance().recuperarIdNuevoPed();
        } catch (SQLException ex) {
            Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
        }
        jLabelNped.setText(ped);
        jTextEmpleadoLeg.setEditable(true);

    }

    private void jButtonAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddItemActionPerformed
        agregarFila();
    }//GEN-LAST:event_jButtonAddItemActionPerformed

    private void agregarFila() {
        DefaultTableModel model = (DefaultTableModel) jTableEditPed.getModel();
        model.addRow(new Object[]{"", "", "", "", ""});
    }

    private void jButtonDeleteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteItemActionPerformed
        ((DefaultTableModel) jTableEditPed.getModel()).removeRow(jTableEditPed.getSelectedRow());
        recalculaTotal();
    }//GEN-LAST:event_jButtonDeleteItemActionPerformed

    private void jTextEmpleadoLegKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextEmpleadoLegKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && !StringUtils.isNullOrEmpty(jTextEmpleadoLeg.getText())) {
            Empleado emp = null;
            Double saldo = 0.0;
            try {
                emp = Empleados_servicio.getInstance().recuperarEmpPorIdTarj(jTextEmpleadoLeg.getText());
            } catch (SQLException ex) {
                Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (emp != null) {
                completaValoresEmpleado(emp);
            } else {
                JOptionPane.showMessageDialog(jPanelModifPed, "No se ha encontrado el legajo ingresado");
                jTextEmpleadoLeg.setText("");
                jLabelEmpleadoNombre.setText("");
            }
        }
    }//GEN-LAST:event_jTextEmpleadoLegKeyPressed

    private void completaValoresEmpleado(Empleado emp) {
        Double saldo;
        jLabelEmpleadoNombre.setText(emp.getNombreEmpleado());
        jTextEmpleadoLeg.setText(String.valueOf(emp.getIdEmpleado()));
        jLabelBonificado.setText(String.valueOf(emp.getBonificacion()));
        jLabelTopeDiario.setText(String.valueOf(emp.getBonifTope()));
        saldo = Double.valueOf(emp.getBonifTope()) - Pedidos_servicio.getInstance().recuperarTotalEmpleado(emp.getIdEmpleado(), null, ped);
        if (saldo < 0.0) {
            saldo = 0.0;
        }
        jLabelSaldo.setText(String.valueOf(saldo));
        jLabelBonifMonto.setText("");
        jLabelTotalFinal.setText("");
        jLabelSaldoQuincena.setText("");
        jTableEditPed.setCellSelectionEnabled(true);
        jTableEditPed.changeSelection(0, 0, false, false);
        jTableEditPed.requestFocus();
        recalculaTotal();
    }

    private void jMenuEmpleadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuEmpleadosActionPerformed

    }//GEN-LAST:event_jMenuEmpleadosActionPerformed

    private void jMenuEmpleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuEmpleadosMouseClicked
        mostrarPanel(jPanelEmpleados, jMenuEmpleados);

    }//GEN-LAST:event_jMenuEmpleadosMouseClicked

    private void jMenuPedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuPedidosMouseClicked
        mostrarPanel(jPanelModifPed, jMenuPedidos);
    }//GEN-LAST:event_jMenuPedidosMouseClicked

    private void jTextEmpleadoIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextEmpleadoIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextEmpleadoIdActionPerformed

    private void jTextEmpleadoDNIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextEmpleadoDNIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextEmpleadoDNIActionPerformed

    private void jButtonCrearEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCrearEmpleadoActionPerformed
        String tar = null;
        if (isNumeric(jTextEmpleadoId.getText()) && isNumeric(jTextEmpleadoBonPorc.getText()) && isNumeric(jTextEmpleadoBon.getText()) && isNumeric(jTextEmpleadoDNI.getText())) {
            if (jTextEmpleadoTarjeta.getText() != "") {
                tar = jTextEmpleadoTarjeta.getText();
            }
            Empleados_servicio.getInstance().guardarEmpleado(Integer.valueOf(jTextEmpleadoId.getText()), jTextEmpleadoNombre.getText(), Integer.valueOf(jTextEmpleadoDNI.getText()), tar, Double.valueOf(jTextEmpleadoBonPorc.getText()), Double.valueOf(jTextEmpleadoBon.getText()));
        } else {
            JOptionPane.showMessageDialog(this, "Verifique los datos ingresados", "Error", JOptionPane.WARNING_MESSAGE);
        }
        limpiarPantallaEmpleado();
    }//GEN-LAST:event_jButtonCrearEmpleadoActionPerformed

    private void jButtonCancelarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarEmpleadoActionPerformed
        limpiarPantallaEmpleado();
    }//GEN-LAST:event_jButtonCancelarEmpleadoActionPerformed

    public static boolean isNumeric(String str) {
        return str.matches("-?\\d+(\\.\\d+)?");  //match a number with optional '-' and decimal.
    }

    public void limpiarPantallaEmpleado() {
        jTextEmpleadoId.setText("");
        jTextEmpleadoBon.setText("");
        jTextEmpleadoBonPorc.setText("");
        jTextEmpleadoDNI.setText("");
        jTextEmpleadoLeg.setText("");
        jTextEmpleadoNombre.setText("");
        jTextEmpleadoTarjeta.setText("");
    }

    private void mostrarPanel(JPanel panel, JMenu menu) {
        jPanelEmpleados.setVisible(false);
        jPanelBusqPed.setVisible(false);
        jPanelModifPed.setVisible(false);
        jMenuEmpleados.setForeground(Color.BLACK);
        jMenuPedidos.setForeground(Color.BLACK);
        panel.setVisible(true);
        menu.setForeground(Color.GRAY);

    }

    private void cargarComboEmpleado(JComboBox combo) {
        try {
            List<Empleado> empleados;
            empleados = Empleados_servicio.getInstance().recuperarTodas();
            for (int i = 0; i < empleados.size(); i++) {
                combo.addItem(empleados.get(i).toString());

            }
            combo.insertItemAt("", 0);
            combo.setSelectedIndex(0);

        } catch (SQLException ex) {
            Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void recalculaTotal() {
        Double total = 0.0;
        Double parcial = 0.0;
        if (jTableEditPed.getValueAt(0, 0) != null) { //primero chequeo que haya filas con datos en la tabla de productos
            for (int i = 0; i < jTableEditPed.getRowCount(); i++) {
                if (jTableEditPed.getValueAt(i, 4) != null) {
                    parcial = Double.valueOf(jTableEditPed.getValueAt(i, 4).toString());
                    total = total + parcial;
                }
            }

            jLabelTotal.setText(Double.toString(total));
            Double bonif = Double.valueOf(jLabelTotal.getText()) * (Double.valueOf(jLabelBonificado.getText())) / 100.00;
            if (bonif > Double.valueOf(jLabelSaldo.getText())) {
                bonif = Double.valueOf(jLabelSaldo.getText());
            }
            jLabelBonifMonto.setText(String.valueOf(bonif));
            Double totF = total - bonif;
            jLabelTotalFinal.setText(String.valueOf(totF));
            String fechaCorte = Parametros_servicio.getInstance().recuperarValorPorCodigo("quincena");
            Double saldo = Pedidos_servicio.getInstance().recuperarTotalEmpleado(Integer.valueOf(jTextEmpleadoLeg.getText()), fechaCorte, ped) + totF;
            jLabelSaldoQuincena.setText(String.valueOf(saldo));
            jButtonGuardarPed.setEnabled(true);
        }

    }

    /**
     * @param args the command line arguments
     * @throws java.sql.SQLException
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pedidos().setVisible(true);
            }
        });

    }

    class ButtonRenderer extends JButton implements TableCellRenderer {

        public ButtonRenderer() {
            setOpaque(true);
        }

        public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int column) {
            if (isSelected) {
                setForeground(table.getSelectionForeground());
                setBackground(table.getSelectionBackground());
            } else {
                setForeground(table.getForeground());
                setBackground(UIManager.getColor("Button.background"));
            }
            setText((value == null) ? "" : value.toString());
            return this;
        }
    }

    /**
     * @version 1.0 11/09/98
     */
    class ButtonEditor extends DefaultCellEditor {

        protected JButton button;

        private String label;

        private boolean isPushed;

        private int columna;

        public ButtonEditor(JCheckBox checkBox) {
            super(checkBox);
            button = new JButton();
            // button.setOpaque(true);
            try {
                Image img = ImageIO.read(getClass().getResource("src/Imagenes/pencil.png"));
                img.getScaledInstance(10, 10, Image.SCALE_SMOOTH);
                button.setIcon(new ImageIcon(img));
            } catch (Exception ex) {
                System.out.println(ex);
            }
            button.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    fireEditingStopped();
                }
            });
        }

        public Component getTableCellEditorComponent(JTable table, Object value,
                boolean isSelected, int row, int column) {
            if (isSelected) {
                button.setForeground(table.getSelectionForeground());
                button.setBackground(table.getSelectionBackground());
            } else {
                button.setForeground(table.getForeground());
                button.setBackground(table.getBackground());
            }
            label = (value == null) ? "" : value.toString();
            button.setText(label);
            isPushed = true;
            columna = column;
            return button;
        }

        public Object getCellEditorValue() {
            if (isPushed) {
                ped = null;
                final int fila = jTablePedidos.getSelectedRow();
                try {
                    ped = Pedidos_servicio.getInstance().recuperarPedidoCompleto(jTablePedidos.getValueAt(fila, 0).toString());
                } catch (SQLException ex) {
                    Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (columna == 3) {
                    /*++++++++++++++++++++++++++++++++++++++++++++++++
                    ++++++++++++++++++MODIFICAR PEDIDO++++++++++++++++
                    ++++++++++++++++++++++++++++++++++++++++++++++++*/
                    mostrarPanel(jPanelModifPed, jMenuPedidos);
                    jPanelModifPed.setBorder(javax.swing.BorderFactory.createTitledBorder("Modificar Pedido"));
                    jLabelNped.setText(ped.getIdPedido().toString());
                    jTextEmpleadoLeg.setText(String.valueOf(ped.getEmpleado().getIdEmpleado()));
                    jTextEmpleadoLeg.setEditable(false);
                    jLabelEmpleadoNombre.setText(ped.getEmpleado().getNombreEmpleado());
                    DefaultTableModel model = (DefaultTableModel) jTableEditPed.getModel();
                    model.removeRow(0);
                    for (DetallePedido det : ped.getDetallesPedido()) {

                        model.addRow(new Object[]{det.getProducto().getIdProducto(), det.getProducto().getDescripcion(), det.getPrecio().toString(), det.getCantidad().toString(), String.valueOf(det.getCantidad() * det.getPrecio())});

                    }
                    completaValoresEmpleado(ped.getEmpleado());
                    //recalculaTotal();

                } else {

                    int n = JOptionPane.showConfirmDialog(jPanelBusqPed, "Seguro?", "Borrar pedido", JOptionPane.YES_NO_OPTION);
                    if (n == JOptionPane.YES_OPTION) {
                        try {
                            /*++++++++++++++++++++++++++++++++++++++++++++++++
                            ++++++++++++++++++ELIMINAR PEDIDO++++++++++++++++
                            ++++++++++++++++++++++++++++++++++++++++++++++++*/
                            Conexion.getConnection().setAutoCommit(false);
                        } catch (SQLException ex) {
                            Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
                        }

                        Pedidos_servicio.getInstance().borrarPedidoCab(String.valueOf(ped.getIdPedido()));
                        try {
                            Conexion.getConnection().commit();
                        } catch (SQLException ex) {
                            Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
                        }

                        final ScheduledThreadPoolExecutor executor = new ScheduledThreadPoolExecutor(1);
                        executor.schedule(new Runnable() {
                            @Override
                            public void run() {
                                borrarPedido(fila);
                            }
                        }, 2, TimeUnit.SECONDS);

                        JOptionPane.showMessageDialog(jPanelBusqPed, "Se ha eliminado el pedido con √©xito");

                    } else if (n == JOptionPane.NO_OPTION) {

                    } else {
                    }
                }

            }
            isPushed = false;

            return new String(label);
        }

        public boolean stopCellEditing() {
            isPushed = false;
            return super.stopCellEditing();
        }

        protected void fireEditingStopped() {
            super.fireEditingStopped();
        }

        private void borrarPedido(int fila) {
            ((DefaultTableModel) jTablePedidos.getModel()).removeRow(fila);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddItem;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonCancelarEmpleado;
    private javax.swing.JButton jButtonCancelarPed;
    private javax.swing.JButton jButtonCrearEmpleado;
    private javax.swing.JButton jButtonDeleteItem;
    private javax.swing.JButton jButtonGuardarPed;
    private javax.swing.JButton jButtonNuevoPed;
    private javax.swing.JComboBox<String> jComboEmpleado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelBonifMonto;
    private javax.swing.JLabel jLabelBonificado;
    private javax.swing.JLabel jLabelEmpleadoNombre;
    private javax.swing.JLabel jLabelNped;
    private javax.swing.JLabel jLabelSaldo;
    private javax.swing.JLabel jLabelSaldoQuincena;
    private javax.swing.JLabel jLabelTopeDiario;
    private javax.swing.JLabel jLabelTotal;
    private javax.swing.JLabel jLabelTotalFinal;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuEmpleados;
    private javax.swing.JMenu jMenuPedidos;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelBusqPed;
    private javax.swing.JPanel jPanelEmpleados;
    private javax.swing.JPanel jPanelModifPed;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableEditPed;
    private javax.swing.JTable jTablePedidos;
    private javax.swing.JTextField jTextEmpleadoBon;
    private javax.swing.JTextField jTextEmpleadoBonPorc;
    private javax.swing.JTextField jTextEmpleadoDNI;
    private javax.swing.JTextField jTextEmpleadoId;
    private javax.swing.JTextField jTextEmpleadoLeg;
    private javax.swing.JTextField jTextEmpleadoNombre;
    private javax.swing.JTextField jTextEmpleadoTarjeta;
    private javax.swing.JFormattedTextField jTextFecha;
    private javax.swing.JTextField jTextNroPedido;
    // End of variables declaration//GEN-END:variables
}
